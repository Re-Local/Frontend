{"ast":null,"code":"var _jsxFileName = \"/Users/iyunji/Desktop/re-local/src/Genre/Genre.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport './Genre.css';\nimport posters from './postersData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Genre = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get('category'); // URL에서 장르 가져옴\n\n  const [current, setCurrent] = useState(0);\n\n  // 해당 장르만 필터\n  const filteredPosters = category ? posters.filter(p => p.category === category) : posters;\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrent(prev => (prev + 1) % filteredPosters.length);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, [filteredPosters.length]);\n  const visiblePosters = [filteredPosters[current % filteredPosters.length], filteredPosters[(current + 1) % filteredPosters.length], filteredPosters[(current + 2) % filteredPosters.length]];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: category ? `${category} 포스터` : '전체 포스터'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"poster-section carousel\",\n      children: visiblePosters.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: p.image,\n          alt: p.title,\n          className: \"poster-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-title\",\n          children: p.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-info\",\n          children: [p.category, \" \", p.location && `| ${p.location}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/genre/all'),\n        children: \"See All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/genre/recommend'),\n        children: \"Recommendation For U\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Genre, \"7rcp9IGqehGqqGZxfr1+M7VQN5U=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = Genre;\nexport default Genre;\nvar _c;\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","posters","jsxDEV","_jsxDEV","Genre","_s","navigate","searchParams","category","get","current","setCurrent","filteredPosters","filter","p","timer","setInterval","prev","length","clearInterval","visiblePosters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","image","alt","title","location","id","onClick","_c","$RefreshReg$"],"sources":["/Users/iyunji/Desktop/re-local/src/Genre/Genre.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport './Genre.css';\nimport posters from './postersData';\n\nconst Genre = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get('category'); // URL에서 장르 가져옴\n\n  const [current, setCurrent] = useState(0);\n\n  // 해당 장르만 필터\n  const filteredPosters = category\n    ? posters.filter(p => p.category === category)\n    : posters;\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrent((prev) => (prev + 1) % filteredPosters.length);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, [filteredPosters.length]);\n\n  const visiblePosters = [\n    filteredPosters[current % filteredPosters.length],\n    filteredPosters[(current + 1) % filteredPosters.length],\n    filteredPosters[(current + 2) % filteredPosters.length]\n  ];\n  \n  return (\n    <div className=\"genre-container\">\n      <h2>{category ? `${category} 포스터` : '전체 포스터'}</h2>\n\n      <section className=\"poster-section carousel\">\n        {visiblePosters.map((p) => (\n          <div key={p.id} className=\"poster-card\">\n            <img src={p.image} alt={p.title} className=\"poster-img\" />\n            <div className=\"poster-title\">{p.title}</div>\n            <div className=\"poster-info\">{p.category} {p.location && `| ${p.location}`}</div>\n          </div>\n        ))}\n      </section>\n\n      <div className=\"poster-buttons\">\n        <button onClick={() => navigate('/genre/all')}>See All</button>\n        <button onClick={() => navigate('/genre/recommend')}>Recommendation For U</button>\n      </div> \n    </div>\n  );\n};\n\nexport default Genre;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}