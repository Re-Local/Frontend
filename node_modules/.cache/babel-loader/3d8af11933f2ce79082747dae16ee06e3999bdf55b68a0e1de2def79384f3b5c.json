{"ast":null,"code":"var _jsxFileName = \"/Users/iyunji/Desktop/re-local/src/Genre/Genre.jsx\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Genre.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Genre = () => {\n  _s();\n  const navigate = useNavigate();\n  // 포스터 더미 데이터\n  const posters = [{\n    id: 1,\n    title: '뮤지컬 헤드윅',\n    category: '뮤지컬',\n    image: '/images/musical.jpg'\n  }, {\n    id: 2,\n    title: '릴로앤스티치',\n    category: '영화',\n    image: '/images/lilo.jpg'\n  }, {\n    id: 3,\n    title: '아트 마켓',\n    category: '플리마켓',\n    location: '성수',\n    image: '/images/art.jpg'\n  }];\n  const [current, setCurrent] = useState(0);\n\n  // 자동 슬라이드(5초마다)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrent(prev => (prev + 1) % posters.length);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, [posters.length]);\n  const visiblePosters = [posters[current], posters[(current + 1) % posters.length], posters[(current + 2) % posters.length]];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"poster-section carousel\",\n      children: visiblePosters.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: p.image,\n          alt: p.title,\n          className: \"poster-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-title\",\n          children: p.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster-info\",\n          children: [p.category, \" | \", p.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/genre/all'),\n        children: \"See All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/recommend'),\n        children: \"Recommendation For U\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Genre, \"IKBY3LRUm5meyQ6MvwtuhY3nS00=\", false, function () {\n  return [useNavigate];\n});\n_c = Genre;\nexport default Genre;\nvar _c;\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Genre","_s","navigate","posters","id","title","category","image","location","current","setCurrent","timer","setInterval","prev","length","clearInterval","visiblePosters","className","children","map","p","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/iyunji/Desktop/re-local/src/Genre/Genre.jsx"],"sourcesContent":["import {React, useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Genre.css';\n\nconst Genre = () => {\n    const navigate = useNavigate();\n  // 포스터 더미 데이터\n  const posters = [\n    {\n      id: 1,\n      title: '뮤지컬 헤드윅',\n      category: '뮤지컬',\n     \n      image: '/images/musical.jpg'\n    },\n    {\n      id: 2,\n      title: '릴로앤스티치',\n      category: '영화',\n     \n      image: '/images/lilo.jpg'\n    },\n    {\n      id: 3,\n      title: '아트 마켓',\n      category: '플리마켓',\n      location: '성수',\n      image: '/images/art.jpg'\n    }\n  ];\n  \n  const [current, setCurrent] = useState(0);\n\n  // 자동 슬라이드(5초마다)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrent((prev) => (prev + 1) % posters.length);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, [posters.length]);\n\n  const visiblePosters = [posters[current], posters[(current + 1) % posters.length], posters[(current + 2) % posters.length]];\n\n  return (\n    <div className=\"genre-container\">\n      {/* 헤더 + 검색 */}\n      {/* 포스터 슬라이더 */}\n      <section className=\"poster-section carousel\">\n        {visiblePosters.map(p => (\n          <div key={p.id} className=\"poster-card\">\n            <img src={p.image} alt={p.title} className=\"poster-img\" />\n            <div className=\"poster-title\">{p.title}</div>\n            <div className=\"poster-info\">{p.category} | {p.location}</div>\n          </div>\n        ))}\n      </section>\n\n      <div className=\"poster-buttons\">\n        <button onClick={() => navigate('/genre/all')}>See All</button>\n        <button onClick={() => navigate('/recommend')}>Recommendation For U</button>\n      </div>\n\n      {/* 필터 버튼 */}\n      {/* ... */}\n    </div>\n  );\n};\n\nexport default Genre;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}