{"ast":null,"code":"var _jsxFileName = \"/Users/iyunji/Desktop/re-local/src/foodmap/foodmap.js\",\n  _s = $RefreshSig$();\nimport './foodmap.css';\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Foodmap = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=50d60c48f372a7f105505d4140b8f96d&autoload=false\";\n    script.async = true;\n    document.head.appendChild(script);\n    let goBackButton;\n    script.onload = async () => {\n      window.kakao.maps.load(async () => {\n        console.log(\"Kakao Maps script loaded\");\n        console.log(\"Kakao Maps API loaded\");\n        // ✅ JSON 파일들 fetch\n        const geojson = await fetch('/seoul.geojson').then(res => res.json());\n        const districtsJson = await fetch('/seoul_districts.geojson').then(res => res.json());\n        const centerData = await fetch('/seoul_districts_topo.json').then(res => res.json());\n        const mapContainer = document.getElementById(\"politic-map\");\n        if (!mapContainer) return;\n        const mapOption = {\n          center: new window.kakao.maps.LatLng(37.566826, 126.9786567),\n          level: 9\n        };\n        const map = new window.kakao.maps.Map(mapContainer, mapOption);\n        const customOverlay = new window.kakao.maps.CustomOverlay({});\n        const infowindow = new window.kakao.maps.InfoWindow({\n          removable: true\n        });\n        let regionPolygons = [];\n        let dongPolygons = [];\n        const displayDongAreas = dongData => {\n          dongData.forEach(dong => {\n            const draw = coords => {\n              const path = coords.map(coord => new window.kakao.maps.LatLng(coord[1], coord[0]));\n              const polygon = new window.kakao.maps.Polygon({\n                map,\n                path,\n                strokeWeight: 2,\n                strokeColor: \"#5C5B5C\",\n                strokeOpacity: 0.8,\n                fillColor: \"#CACACB\",\n                fillOpacity: 0.7\n              });\n              dongPolygons.push(polygon);\n              addDongPolygonEvents(polygon, dong);\n            };\n            if (dong.geometry.type === \"Polygon\") {\n              draw(dong.geometry.coordinates[0]);\n            } else if (dong.geometry.type === \"MultiPolygon\") {\n              dong.geometry.coordinates.forEach(part => draw(part[0]));\n            }\n          });\n        };\n        const addDongPolygonEvents = (polygon, dong) => {\n          window.kakao.maps.event.addListener(polygon, \"mouseover\", e => {\n            polygon.setOptions({\n              fillColor: \"#b29ddb\"\n            });\n            customOverlay.setPosition(e.latLng);\n            customOverlay.setMap(map);\n          });\n          window.kakao.maps.event.addListener(polygon, \"mouseout\", () => {\n            polygon.setOptions({\n              fillColor: \"#CACACB\"\n            });\n            customOverlay.setMap(null);\n          });\n          window.kakao.maps.event.addListener(polygon, \"click\", e => {\n            const districtName = dong.properties.SIG_KOR_NM;\n            const content = document.createElement(\"div\");\n            content.className = \"infowindow-content\";\n            infowindow.setContent(content);\n            infowindow.setPosition(e.latLng);\n            infowindow.setMap(map);\n            console.log(window.kakao);\n          });\n        };\n        const displayArea = (coordinates, name) => {\n          const path = coordinates.map(coord => new window.kakao.maps.LatLng(coord[1], coord[0]));\n          const polygon = new window.kakao.maps.Polygon({\n            map,\n            path,\n            strokeWeight: 2,\n            strokeColor: \"#004c80\",\n            strokeOpacity: 0.8,\n            fillColor: \"#fff\",\n            fillOpacity: 0.7\n          });\n          regionPolygons.push(polygon);\n          window.kakao.maps.event.addListener(polygon, \"mouseover\", e => {\n            polygon.setOptions({\n              fillColor: \"#cfc2e9\"\n            });\n            customOverlay.setPosition(e.latLng);\n            customOverlay.setMap(map);\n          });\n          window.kakao.maps.event.addListener(polygon, \"mouseout\", () => {\n            polygon.setOptions({\n              fillColor: \"#fff\"\n            });\n            customOverlay.setMap(null);\n          });\n          window.kakao.maps.event.addListener(polygon, \"click\", () => {\n            regionPolygons.forEach(p => p.setMap(null));\n            regionPolygons = [];\n            const center = centerData.centers.find(c => c.name === name);\n            if (center) {\n              map.setCenter(new window.kakao.maps.LatLng(center.lat, center.lng));\n            }\n            const dongData = districtsJson.features.filter(dong => dong.properties.SIG_KOR_NM === name);\n            if (dongData.length > 0) {\n              map.setLevel(7);\n              displayDongAreas(dongData);\n              addGoBackButton();\n            } else {\n              alert(`${name}의 동 정보가 없습니다.`);\n            }\n          });\n        };\n        const addGoBackButton = () => {\n          if (goBackButton) return;\n          goBackButton = document.createElement(\"button\");\n          goBackButton.innerText = \"구 다시 선택하기\";\n          goBackButton.className = \"back-button\";\n          goBackButton.onclick = () => resetToRegions();\n          document.body.appendChild(goBackButton);\n        };\n        const resetToRegions = () => {\n          dongPolygons.forEach(p => p.setMap(null));\n          dongPolygons = [];\n          infowindow.close();\n          map.setCenter(new window.kakao.maps.LatLng(37.566826, 126.9786567));\n          map.setLevel(9);\n          if (goBackButton) {\n            goBackButton.remove();\n            goBackButton = null;\n          }\n          geojson.features.forEach(feature => {\n            const coordinates = feature.geometry.coordinates[0];\n            const name = feature.properties.SIG_KOR_NM;\n            displayArea(coordinates, name);\n          });\n        };\n        geojson.features.forEach(feature => {\n          const coordinates = feature.geometry.coordinates[0];\n          const name = feature.properties.SIG_KOR_NM;\n          displayArea(coordinates, name);\n        });\n      });\n    };\n    document.head.appendChild(script);\n    return () => {\n      if (goBackButton) {\n        goBackButton.remove();\n      }\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC6B0\\uB9AC \\uC9C0\\uC5ED \\uADFC\\uCC98 \\uB9DB\\uC9D1 \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"politic-map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Foodmap, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Foodmap;\nexport default Foodmap;\nvar _c;\n$RefreshReg$(_c, \"Foodmap\");","map":{"version":3,"names":["React","useEffect","useNavigate","jsxDEV","_jsxDEV","Foodmap","_s","navigate","script","document","createElement","src","async","head","appendChild","goBackButton","onload","window","kakao","maps","load","console","log","geojson","fetch","then","res","json","districtsJson","centerData","mapContainer","getElementById","mapOption","center","LatLng","level","map","Map","customOverlay","CustomOverlay","infowindow","InfoWindow","removable","regionPolygons","dongPolygons","displayDongAreas","dongData","forEach","dong","draw","coords","path","coord","polygon","Polygon","strokeWeight","strokeColor","strokeOpacity","fillColor","fillOpacity","push","addDongPolygonEvents","geometry","type","coordinates","part","event","addListener","e","setOptions","setPosition","latLng","setMap","districtName","properties","SIG_KOR_NM","content","className","setContent","displayArea","name","p","centers","find","c","setCenter","lat","lng","features","filter","length","setLevel","addGoBackButton","alert","innerText","onclick","resetToRegions","body","close","remove","feature","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/iyunji/Desktop/re-local/src/foodmap/foodmap.js"],"sourcesContent":["import './foodmap.css';\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Foodmap = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const script = document.createElement(\"script\");\n        script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=50d60c48f372a7f105505d4140b8f96d&autoload=false\";\n        script.async = true;\n        document.head.appendChild(script);\n\n        let goBackButton;\n\n        script.onload = async () => {\n            window.kakao.maps.load(async () => {\n                console.log(\"Kakao Maps script loaded\");\n                console.log(\"Kakao Maps API loaded\");\n                // ✅ JSON 파일들 fetch\n                const geojson = await fetch('/seoul.geojson').then(res => res.json());\n                const districtsJson = await fetch('/seoul_districts.geojson').then(res => res.json());\n                const centerData = await fetch('/seoul_districts_topo.json').then(res => res.json());\n\n                const mapContainer = document.getElementById(\"politic-map\");\n                if (!mapContainer) return;\n\n                const mapOption = {\n                    center: new window.kakao.maps.LatLng(37.566826, 126.9786567),\n                    level: 9,\n                };\n\n                const map = new window.kakao.maps.Map(mapContainer, mapOption);\n                const customOverlay = new window.kakao.maps.CustomOverlay({});\n                const infowindow = new window.kakao.maps.InfoWindow({ removable: true });\n\n                let regionPolygons = [];\n                let dongPolygons = [];\n\n                const displayDongAreas = (dongData) => {\n                    dongData.forEach((dong) => {\n                        const draw = (coords) => {\n                            const path = coords.map(coord => new window.kakao.maps.LatLng(coord[1], coord[0]));\n                            const polygon = new window.kakao.maps.Polygon({\n                                map,\n                                path,\n                                strokeWeight: 2,\n                                strokeColor: \"#5C5B5C\",\n                                strokeOpacity: 0.8,\n                                fillColor: \"#CACACB\",\n                                fillOpacity: 0.7,\n                            });\n                            dongPolygons.push(polygon);\n                            addDongPolygonEvents(polygon, dong);\n                        };\n\n                        if (dong.geometry.type === \"Polygon\") {\n                            draw(dong.geometry.coordinates[0]);\n                        } else if (dong.geometry.type === \"MultiPolygon\") {\n                            dong.geometry.coordinates.forEach(part => draw(part[0]));\n                        }\n                    });\n                };\n\n                const addDongPolygonEvents = (polygon, dong) => {\n                    window.kakao.maps.event.addListener(polygon, \"mouseover\", (e) => {\n                        polygon.setOptions({ fillColor: \"#b29ddb\" });\n                        customOverlay.setPosition(e.latLng);\n                        customOverlay.setMap(map);\n                    });\n\n                    window.kakao.maps.event.addListener(polygon, \"mouseout\", () => {\n                        polygon.setOptions({ fillColor: \"#CACACB\" });\n                        customOverlay.setMap(null);\n                    });\n\n                    window.kakao.maps.event.addListener(polygon, \"click\", (e) => {\n                        const districtName = dong.properties.SIG_KOR_NM;\n\n                        const content = document.createElement(\"div\");\n                        content.className = \"infowindow-content\";\n\n                        infowindow.setContent(content);\n                        infowindow.setPosition(e.latLng);\n                        infowindow.setMap(map);\n                        console.log(window.kakao);\n                      \n                    });\n                };\n\n                const displayArea = (coordinates, name) => {\n                    const path = coordinates.map(coord => new window.kakao.maps.LatLng(coord[1], coord[0]));\n\n                    const polygon = new window.kakao.maps.Polygon({\n                        map,\n                        path,\n                        strokeWeight: 2,\n                        strokeColor: \"#004c80\",\n                        strokeOpacity: 0.8,\n                        fillColor: \"#fff\",\n                        fillOpacity: 0.7,\n                    });\n\n                    regionPolygons.push(polygon);\n\n                    window.kakao.maps.event.addListener(polygon, \"mouseover\", (e) => {\n                        polygon.setOptions({ fillColor: \"#cfc2e9\" });\n                        customOverlay.setPosition(e.latLng);\n                        customOverlay.setMap(map);\n                    });\n\n                    window.kakao.maps.event.addListener(polygon, \"mouseout\", () => {\n                        polygon.setOptions({ fillColor: \"#fff\" });\n                        customOverlay.setMap(null);\n                    });\n\n                    window.kakao.maps.event.addListener(polygon, \"click\", () => {\n                        regionPolygons.forEach(p => p.setMap(null));\n                        regionPolygons = [];\n\n                        const center = centerData.centers.find(c => c.name === name);\n                        if (center) {\n                            map.setCenter(new window.kakao.maps.LatLng(center.lat, center.lng));\n                        }\n\n                        const dongData = districtsJson.features.filter(dong => dong.properties.SIG_KOR_NM === name);\n                        if (dongData.length > 0) {\n                            map.setLevel(7);\n                            displayDongAreas(dongData);\n                            addGoBackButton();\n                        } else {\n                            alert(`${name}의 동 정보가 없습니다.`);\n                        }\n                    });\n                };\n\n                const addGoBackButton = () => {\n                    if (goBackButton) return;\n                    goBackButton = document.createElement(\"button\");\n                    goBackButton.innerText = \"구 다시 선택하기\";\n                    goBackButton.className = \"back-button\";\n                    goBackButton.onclick = () => resetToRegions();\n                    document.body.appendChild(goBackButton);\n                };\n\n                const resetToRegions = () => {\n                    dongPolygons.forEach(p => p.setMap(null));\n                    dongPolygons = [];\n                    infowindow.close();\n\n                    map.setCenter(new window.kakao.maps.LatLng(37.566826, 126.9786567));\n                    map.setLevel(9);\n\n                    if (goBackButton) {\n                        goBackButton.remove();\n                        goBackButton = null;\n                    }\n\n                    geojson.features.forEach(feature => {\n                        const coordinates = feature.geometry.coordinates[0];\n                        const name = feature.properties.SIG_KOR_NM;\n                        displayArea(coordinates, name);\n                    });\n                };\n\n                geojson.features.forEach(feature => {\n                    const coordinates = feature.geometry.coordinates[0];\n                    const name = feature.properties.SIG_KOR_NM;\n                    displayArea(coordinates, name);\n                });\n            });\n        };\n\n        document.head.appendChild(script);\n\n        return () => {\n            if (goBackButton) {\n                goBackButton.remove();\n            }\n        };\n    }, [navigate]);\n\n    return (\n    <div>\n    <h1>우리 지역 근처 맛집 찾기</h1>\n    <div id=\"politic-map\"></div>\n    </div>\n    );\n};\n\nexport default Foodmap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}