import React from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import Topnav from './Topnav';
import './TestResults.css';

const TestResults = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const testResults = location.state?.testResults;

  const handleRetakeTest = () => {
    navigate('/test/my-test');
  };

<<<<<<< Updated upstream
@keyframes curtainFloat {
  0%, 100% { transform: skewX(-15deg) translateX(0); }
  50% { transform: skewX(-15deg) translateX(20px); }
}

/* 메인 콘텐츠 */
.testresults-content {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  position: relative;
  z-index: 1;
}

/* 헤더 */
.testresults-header {
  text-align: center;
  margin: 40px 0 50px 0;
}

.testresults-title {
  color: #FFD700;
  font-size: 3rem;
  font-weight: 800;
  margin: 0 0 20px 0;
  text-shadow: 0 0 30px rgba(255, 215, 0, 0.5);
  letter-spacing: -1px;
}

.testresults-subtitle {
  color: #9ca3af;
  font-size: 1.2rem;
  margin: 0;
  line-height: 1.5;
}

/* 타입 히어로 섹션 */
.type-hero {
  background: rgba(139, 0, 0, 0.18);
  border: 2px solid #8B0000;
  border-radius: 16px;
  padding: 28px 24px;
  text-align: center;
}

.type-code {
  font-size: 3rem;
  font-weight: 900;
  letter-spacing: 4px;
  color: #FFD700;
  text-shadow: 0 0 24px rgba(255, 215, 0, 0.35);
  margin-bottom: 10px;
}

.type-desc {
  color: #e0e0e0;
  margin: 0;
}

/* 추천 섹션 */
.recommendations {
  margin-top: 28px;
  background: rgba(139, 0, 0, 0.1);
  border: 1px solid #8B0000;
  border-radius: 14px;
  padding: 20px;
}

.recommendations h2 {
  color: #FFD700;
  margin: 0 0 14px 0;
}

.tag-list {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.tag {
  background: rgba(139, 0, 0, 0.25);
  border: 1px solid #FFD700;
  color: #FFD700;
  padding: 6px 12px;
  border-radius: 999px;
  font-weight: 600;
}

.cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 12px;
}

.card {
  background: rgba(255, 255, 255, 0.04);
  border: 1px solid #8B0000;
  border-radius: 10px;
  padding: 16px;
  text-align: center;
}

/* 액션 버튼 */
.action-buttons {
  text-align: center;
  margin-top: 30px;
}

.retake-btn {
  background: linear-gradient(135deg, #8B0000, #A52A2A);
  border: 3px solid #FFD700;
  color: #FFD700;
  padding: 15px 30px;
  border-radius: 25px;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.retake-btn:hover {
  background: linear-gradient(135deg, #FFD700, #FFA500);
  color: #8B0000;
  transform: translateY(-2px);
  box-shadow: 0 5px 20px rgba(255, 215, 0, 0.4);
}

/* 반응형 디자인 */
@media (max-width: 768px) {
  .testresults-title {
    font-size: 2.5rem;
  }
  
  .type-code {
    font-size: 2.5rem;
  }
  
  .recommendations {
    padding: 16px;
  }
  
  .cards {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  }
}

@media (max-width: 480px) {
  .testresults-content {
    padding: 15px;
  }
  
  .testresults-title {
    font-size: 2rem;
  }
  
  .type-code {
    font-size: 2rem;
    letter-spacing: 2px;
  }
  
  .type-hero {
    padding: 20px 16px;
  }
  
  .recommendations {
    padding: 14px;
  }
  
  .tag {
    padding: 5px 10px;
    font-size: 0.9rem;
  }
  
  .card {
    padding: 12px;
  }
  
  .retake-btn {
    padding: 12px 25px;
    font-size: 1rem;
  }
}
=======
  if (!testResults) {
    return (
      <div className="testresults-container">
        <Topnav />
        <div className="testresults-content">
          <div className="testresults-header">
            <h1 className="testresults-title">Test Results</h1>
            <p className="testresults-subtitle">No test results found. Please take the test first.</p>
            <button className="retake-btn" onClick={handleRetakeTest}>
              Take Test
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="testresults-container">
      <Topnav />
      
      <div className="testresults-content">
        <div className="testresults-header">
          <h1 className="testresults-title">Test Results</h1>
          <p className="testresults-subtitle">Your personality test results</p>
        </div>

        <div className="results-summary">
          <h2>Test Summary</h2>
          <p>You completed {Object.keys(testResults).length} questions</p>
          
          <div className="results-breakdown">
            <h3>Response Breakdown:</h3>
            <div className="breakdown-stats">
              <div className="stat-item">
                <span className="stat-label">Strongly Agree (7):</span>
                <span className="stat-value">{Object.values(testResults).filter(v => v === 7).length}</span>
              </div>
              <div className="stat-item">
                <span className="stat-label">Agree (6):</span>
                <span className="stat-value">{Object.values(testResults).filter(v => v === 6).length}</span>
              </div>
              <div className="stat-item">
                <span className="stat-label">Somewhat Agree (5):</span>
                <span className="stat-value">{Object.values(testResults).filter(v => v === 5).length}</span>
              </div>
              <div className="stat-item">
                <span className="stat-label">Neutral (4):</span>
                <span className="stat-value">{Object.values(testResults).filter(v => v === 4).length}</span>
              </div>
              <div className="stat-item">
                <span className="stat-label">Somewhat Disagree (3):</span>
                <span className="stat-value">{Object.values(testResults).filter(v => v === 3).length}</span>
              </div>
              <div className="stat-item">
                <span className="stat-label">Disagree (2):</span>
                <span className="stat-value">{Object.values(testResults).filter(v => v === 2).length}</span>
              </div>
              <div className="stat-item">
                <span className="stat-label">Strongly Disagree (1):</span>
                <span className="stat-value">{Object.values(testResults).filter(v => v === 1).length}</span>
              </div>
            </div>
          </div>

          <div className="action-buttons">
            <button className="retake-btn" onClick={handleRetakeTest}>
              Retake Test
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default TestResults;
>>>>>>> Stashed changes
